from functools import reduce
class StaticCheck(Visitor):

    def visitProgram(self,ctx:Program,o:object):
        '''o = []
        for decl in ctx.decl:
            o += self.visit(decl, o)'''
        reduce(lambda acc, ele: acc + [self.visit(ele, acc)], ctx.decl, [])

    def visitVarDecl(self,ctx:VarDecl,o:object):
        if [*filter(lambda x: x.name == ctx.name, o)]:
            raise RedeclaredDeclaration(ctx.name)
        return ctx

    def visitConstDecl(self,ctx:ConstDecl,o:object):
        if [*filter(lambda x: x.name == ctx.name, o)]:
            raise RedeclaredDeclaration(ctx.name)
        return ctx
        
    def visitIntType(self,ctx:IntType,o:object):pass

    def visitFloatType(self,ctx:FloatType,o:object):pass

    def visitIntLit(self,ctx:IntLit,o:object):pass